apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "zbi-control-plane.fullname" . }}
data:
  nginx.conf: |
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log debug;
    pid       /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
      include       /etc/nginx/mime.types;
      
      default_type  application/octet-stream;
      log_format main   '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer"'
                          '"$http_user_agent" "$http_x_forwaded_for"';
      access_log    /var/log/nginx/access.log main;
      sendfile          on;
      keepalive_timeout 65;
      server {
        listen {{ .Values.controlplane.service.port }};

        #server_name ~^(?<subdomain>.*?)\.;
        server_name {{ include "zbi-control-plane.domain" .}};
        resolver kube-dns.kube-system.svc.cluster.local valid=5s;

        location / {
          root  /usr/share/nginx/html;
          index index.html index.htm;
        }

        location /api/v1/command {
          if ($request_method !~ ^(POST|PUT|DELETE|PATCH)$ ) {
            return 405;
          }

          rewrite ^(/api/v1/command)/(.*) /api/$2 break;
          proxy_pass http://{{ include "zbi-controller.fullname" . }}-svc.{{ .Release.Namespace}}.svc.cluster.local:{{ .Values.controller.service.port }};
          proxy_set_header X-request_uri "$request_uri";
          proxy_set_header Host $host;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          #proxy_http_version: 1.1;
          #proxy_read_timeout 120;
        }

        location /api/v1/query {
          if ($request_method !~ ^(GET)$ ) {
            return 405;
          }

          rewrite ^(/api/v1/query)/(.*) /api/$2 break;
          proxy_pass http://{{ include "zbi-db.fullname" . }}-svc.{{ .Release.Namespace}}.svc.cluster.local:{{ .Values.database.service.port }};
          proxy_set_header X-request_uri "$request_uri";
          proxy_set_header Host $host;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          #proxy_http_version: 1.1;
          #proxy_read_timeout 120;
        }

      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zbi-control-plane.fullname" . }}
  labels:
    {{- include "zbi.labels" . | nindent 4 }}
spec:
  {{- if not .Values.controlplane.autoscaling.enabled }}
  replicas: {{ .Values.controlplane.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "zbi-control-plane.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.controlplane.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zbi-control-plane.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.controlplane.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zbi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controlplane.podSecurityContext | nindent 8 }}
      volumes:
      - name: nginx-config
        configMap:
          name: {{ include "zbi-control-plane.fullname" . }}
      - name: log
        emptyDir: {}
      containers:
        - name: control-plane
          securityContext:
            {{- toYaml .Values.controlplane.securityContext | nindent 12 }}
          image: "{{ .Values.controlplane.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controlplane.image.pullPolicy }}
          volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
          - name: log
            mountPath: /var/log/nginx
          ports:
            - name: http
              containerPort: {{ .Values.controlplane.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.controlplane.resources | nindent 12 }}
      {{- with .Values.controlplane.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controlplane.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controlplane.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "zbi-control-plane.fullname" . }}-svc
  labels:
    {{- include "zbi.labels" . | nindent 4 }}
spec:
  type: {{ .Values.controlplane.service.type }}
  ports:
    - port: {{ .Values.controlplane.service.port }}
      targetPort: {{ .Values.controlplane.service.port }}
      protocol: TCP
      name: http
  selector:
    {{- include "zbi-control-plane.selectorLabels" . | nindent 4 }}
---
{{- if .Values.controlplane.autoscaling.enabled }}
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "zbi-control-plane.fullname" . }}
  labels:
    {{- include "zbi.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "zbi-control-plane.fullname" . }}
  minReplicas: {{ .Values.controlplane.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.controlplane.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.controlplane.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: {{ .Values.controlplane.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if .Values.controlplane.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: {{ .Values.controlplane.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: {{ include "zbi-control-plane.fullname" . }}
  labels:
    {{- include "zbi.labels" . | nindent 4 }}
  {{- if .Values.externalDNS.enabled }}
  annotations:
    external-dns.alpha.kubernetes.io/hostname: {{ include "zbi-control-plane.domain" . }}
  {{- end }}
spec:
  virtualhost:
    fqdn: {{ include "zbi-control-plane.domain" .}}
    tls:
      secretName: {{ include "zbi-control-plane.fullname" . }}
  routes:
    - services:
      - name: {{ include "zbi-control-plane.fullname" . }}-svc
        port: {{ .Values.controlplane.service.port }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "zbi-control-plane.fullname" . }}
spec:
  commonName: "{{ include "zbi-control-plane.domain" . }}"
  dnsNames: ["{{ include "zbi-control-plane.domain" . }}"]
  duration: {{ .Values.certificate.duration }}
  renewBefore: {{ .Values.certificate.renewBefore }}
  issuerRef:
    kind: {{ .Values.certificate.issuer.kind }}
    name: {{ .Values.certificate.issuer.name }}
  secretName: {{ include "zbi-control-plane.fullname" . }}
